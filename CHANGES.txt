[0.7.1] - 8/5/2012
  * The MVC MailerBase now inherits from Controller instead of ControllerBase. This
      is an attempt to fix issue #46 that outlined problems with the SMTP client
      being disposed of too early.  Now we'll just let MVC handle it for us.
  * There is a new option for Email() methods in both the MVC and Standalone version
      that allows you to specify whether we should trim the body of your message.
      The default value for this param is "true", but you can override it like so:
         return Email("MyView", trimBody: false);
  * Inline attachments have been changed to always have the content-type of 
      "multipart/related".  This is a fix for #38 where certain email clients could
      not display inline images properly without this MIME type.
  * Fixing issue #42 that occurred when developers placed Areas in a namespace that
      was outside of the MVC standard "Areas" namespace.  We will fall back to the
      old behavior if the route data lookup fails.

[0.7.0] - 2/4/2012
  * Adding a new standard mail sender that supports sending messages through
      Postmark (www.postmarkapp.com).

[0.6.2] - 9/26/2011
  * The default encoding for mail messages has been changed from UTF8.  It was
      previously set to Encoding.Default.  This resolves issue #30.
  * There is a new Url helper called Url.AbsoluteContent.  This can be used in the
      same way that Url.Content is used in ASP.NET MVC to generate absolute URL's
      for virtual content paths.  This resolves issue #24.
  * Assemblies are now strongly-named as requested in issue #31.  The main key is
      located at src/ActionMailer.Net/ActionMailer.Net.snk.

[0.6.1] - 8/16/2011
  * Multipart messages will now render the plain text view first and the HTML view
      last.  This fixes Issue #23 and should cause multipart messages to render
      correctly in standards-compliant email clients (i.e. Thunderbird).

[0.6.0] - 7/5/2011

  * Started support for standalone Razor-based email generation.  This means you can
      now generate emails with the Razor syntax without any need for ASP.NET MVC 3.

  * Moved EmailResult, MailerBase and all UrlHelper and HtmlHelper extensions into the
      ActionMailer.Net.Mvc assembly.  This is because of the new standalone Razor
      support that has been introduced.  All this really means is that you need to
      change your current using/imports statements to ActionMailer.Net.Mvc.

  * Re-organized unit tests to account for the separation between MVC and standalone.

  * Breaking Change:  MailerBase is now an abstract class with a protected constructor.
      This basically ensures that MailerBase can only be inherited (not instantiated).
      This should have been the case all along, but I just forgot to make it happen.

[0.5.0] - 3/15/2011

  * Change log started.

  * MailerBase.Email() method now has only one overload with two optional parameters
      for model and masterName.  ViewName is now required because of the bug identified
      in Issue #7 on BitBucket.  This is a breaking change.  All you need to do is
      modify your existing EmailResult actions to pass a viewName to the Email() method.

  * Areas should now be detected properly.  Thanks to Miroslav Popovic for submitting
      some sample code to fix this in Issue #11.  Also thanks to Jeremy Kuhlman for
      bringing this issue to my attention as well.